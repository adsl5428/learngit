技术笔记怎么写?
(概念/经验/方法/工具)
要求:1 1000

使用navicat 建模 文件的 位置  
D:\我的文档\Documents\Navicat\MySQL\profiles
里面的 .ndm 文件


laravel 邮箱配置 (腾讯企业邮箱)
.env 配置
MAIL_DRIVER=smtp
MAIL_HOST=smtp.exmail.qq.com
MAIL_PORT=465
MAIL_USERNAME=*********@fnjr2017.com
MAIL_PASSWORD=*********
MAIL_ENCRYPTION=ssl

邮箱,邮件
config/mail.php 配置
'from' => ['address' => '*********@fnjr2017.com', 'name' => '丰纳金融'],

控制器发送   (普通文本发送)  Mail::queue队列发送   Mail::send普通发送
        $name = '王小帅2';
        Mail::queue('mail',['name'=>$name],function($message){
            $to = '343739868@qq.com';
            $message ->to($to)->subject('邮件测试');
        });
其中第一个参数 'mail', 为模板 

mail.blade.php  
{{$name}}你好，这是一封测试文件。 
<br>
<img src='{{$message->embed($image)}}'>
 

第二个参数 ['name'=>$name] 为模板里面的变量的赋值 
 $image = 'http://d.hiphotos.baidu.com/zhidao/pic/item/1ad5ad6eddc451da4ab93e2bb0fd5266d11632a6.jpg';  //网络图片

可多个,['name'=>$name , 'imgPath'=>$image] 

更详细其他用法请参考http://www.jianshu.com/p/8ccb2820df23  

git 放弃本地修改 强制更新
git fetch --all
git reset --hard origin/master


阿里大鱼 短信验证 
https://packagist.org/packages/iscms/alisms-for-laravel

composer 报proc_open(): fork failed errors错误解决方法
原因由于虚拟机分配的内存太少，而导致没有可用内存打开文件
解决方法
1：加大虚拟机的内存
2：在Linux下的解决方案：
开启swap：
/bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
/sbin/mkswap /var/swap.1
/sbin/swapon /var/swap.1


linux 安装composer
机器要安装php
cp /usr/local/php/bin/php  /usr/sbin/  让php拥有全局命令

全局安装composer
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer


使用laravel一键安装包,执行一下 php artisan key:generate ,把唯一标识换掉,

对于laravel来说跟网站根目录是public文件夹,所以用Apache或nginx配置的时候,网站目录是public,而不是根目录,虽然把根目录的 server.php 改成index.php 也是可以的, 但这并不官方.

在linux环境下,网站如果500错误,目录没有777权限,chmod -R 777  给下权限 就好了.

搭建好后,访问,中间 显示laravel , 环境配置完成. 



5.2
如何使用laravel 发送邮件,基本方法
使用腾讯企业邮箱发送邮件，
首先要在企业邮箱 web 版的 邮箱设置 -> 客户端设置 打开 IMAP/SMTP服务 和 POP/SMTP服务
（一般默认是打开的，如果发送不了，记得看一下这里的设置）。
设置.env 文件
MAIL_DRIVER=smtp
MAIL_HOST=smtp.exmail.qq.com
MAIL_PORT=465
MAIL_USERNAME=user@company.com
MAIL_PASSWORD=password
MAIL_ENCRYPTION=ssl

在php程序里 
    Mail::raw('test mail', function ($m) {
        $m->from('user@company.com', 'User');
        $m->to('1234567@qq.com')->subject('test email');
    });



<<<<<<< HEAD
4.17-5.1
随着把记事本做出来,虽然不好看,但是对laravel的认知又加深了,
不仅仅是认知,打代码能力从0到打出项目,这是有比较大的提升,

但是沉迷于代码和教程,但是技术笔记忘得一干二净,
前面坚持了一阶段,确实体会到做技术笔记是个好习惯,整理收获,记下对自己来说的难点,以及如何解决.
有助于回头整理.看到自己一步一步成长与收获.增加成就感.

还是要培养这个习惯的.让他成为技术成长不可缺少的一部分



4.10-4.16

如果没什么其他要求,打算继续看教程,直至能把blog做出来

主要是通过做blog,加深对laravel框架的理解和应用.


=======
把代码部署到服务器上 要解决一个问题, 否则要404
nginx/conf/vhosts 目录下的站点配置文件
里面要加上这段
    location / {  
        #try_files $uri $uri/ =404;  
        try_files $uri $uri/ /index.php?$query_string;  
    }
如果本来有这句 try_files $uri $uri/ =404; 这句要注释
加上这句	try_files $uri $uri/ /index.php?$query_string; 
重启 nginx 搞定 


Linux一键安装web环境  常用命令和路径
>>>>>>> 41557e0f847b19834e1a19f0af1e7e41fdf0b688
网站目录：/alidata/www/
mysql 和 ftp 密码路径：/root/sh-1.x.x/account.log
服务器软件目录：/alidata/server
Mysql 目录 /alidata/server/mysql
Php 目录/alidata/server/php
Tomcat 目录/alidata/server/tomcat7

选择了 nginx 那么会有一个 nginx 目录在 /alidata/server/nginx/
Nginx 配置文件在/alidata/server/nginx/conf
Nginx 虚拟主机添加 你可以修改/alidata/server/nginx/conf/vhosts/phpwind.conf
选择了 apache 那么会有一个 httpd 目录在 /alidata/server/httpd
apache 配置文件在/alidata/server/httpd/conf
apache 虚拟主机添加 你可以修改/alidata/server/httpd/conf/vhosts/phpwind.conf
各个服务操作命令汇总：
nginx：
/etc/init.d/nginx restart/start/stop/reload)
apache:
/etc/init.d/httpd restart/start/stop/...
mysql:
/etc/init.d/mysqld restart/start/stop/...
php-fpm:
/etc/init.d/php-fpm restart/start/stop/...



使用可视化工具 来操作数据库还是方便的,但是mysql默认是不给远程访问的,必须要打开它.
使用如下方法解决:
mysql不给远程访问(使用Navicat访问) Navicat

错误原因是：本地IP（xxx.xxx.xxx.xxx）没有访问远程数据库的权限。
于是下面开启本地IP（xxx.xxx.xxx.xxx）对远程mysql数据库的访问权限。
首先远程连接进入服务器，在cms中输入mysql -u root -p，然后回车，输入密码后回车进入mysql命令行。
输入use mysql;
输入select user,password,host from user;
可以看到host中只有localhost主机。我们需要将xxx.xxx.xxx.xxx也添加到这里才对。
添加方法如下：
输入
grant all privileges on *.* to root@"xxx.xxx.xxx.xxx" identified by "密码";    // % 为IP通配符
这相当于是给IP-xxx.xxx.xxx.xxx赋予了所有的权限，包括远程访问权限。
然后再输入
flush privileges;
这相当于是重新加载一下mysql权限，这一步必须有。
再次输入select user,password,host from user;
可以看到host中已经有了新加的IP。
现在再次用Navicat for MySQl访问远程mysql数据库，已经能正常打开了。
问题解决。
不过还有一个问题，发现双击打开某张表的时候很慢，至少要3秒。
原因是：
当远程访问mysql时, mysql会解析域名, 所以会导致访问速度很慢, 会有2,3秒延时！
解决办法：
修改mysql安装目录下的my.ini，加上下面这个配置可解决此问题。在[mysqld]下加入：skip-name-resolve
保存退出后重启mysql服务。
然后访问速度就和本地一样快啦。





资源路由,分组路由,中间件

Apache多站点设置,师父是没让我看这个的.但是这个设置逻辑和nginx一模一样,就顺带写下.
毕竟windows下偶尔还是能用到的.

改本地的host
127.0.0.1	f.cc
127.0.0.1	ff.cc


打开Apache安装目录下conf/httpd.conf文件，找到下面两行文字,把最前面的 # 号去掉,然后保存。
大致为 打开 加载 分站点 配置的开关				
#LoadModule vhost_alias_module modules/mod_vhost_alias.so
#Include conf/extra/httpd-vhosts.conf   

Apache安装目录下/conf/extra/httpd-vhosts.conf

<VirtualHost*:80>
DocumentRoot"D:/Appserv/www/1"
ServerName  f.cc
</VirtualHost>

<VirtualHost*:80>
DocumentRoot"D:/Appserv/www/2"
ServerName   ff.cc
</VirtualHost>


最后 conf/httpd.conf 配置文件 只留 这2个权限 设置,其他的都去掉 前面加#
<Directory />
   Options FollowSymLinks ExecCGI Indexes
   AllowOverride None
#   Order deny,allow
#  Deny from all
#  Satisfy all
</Directory>

重启Apache 服务

nginx多站点配置

改本地的host
127.0.0.1	g.cc
127.0.0.1	gg.cc

修改 nginx/conf/vhosts 的站点文件,一个站点 一个文件
g.conf
server {
...
server_name  g.cc;
root /alidata/www/g;
...
}

gg.conf
server {
...
server_name  gg.cc;
root /alidata/www/gg;
...
}

chmod -Rf 777 修改网站目录权限  //可能不需要 777, 暂时用777
(具体为storage 和 vendor 必须要为777 , 其他默认即可)
/etc/init.d/nginx restart  //重启服务

4月9号凌晨

对phpstorm 中live templates 插件多一点了解.
C:\Users\Administrator\.PhpStorm2017.1\config\templates\PHP.xml
直接把设置也加进仓库吧,以后带着到处跑

对laraver框架中 路由,MVC工作流程,有比较清楚理性的了解,可以独立敲出简单的代码.

大致是这样的,所有请求 都经过路由,路由分发给对应的控制器C,如果涉及到数据库就交给模型M处理,数据处理完毕后,控制器把需要的数据传给视图,然后由视图V显示出来.

掌握php artisan 命令一些简单的 应用,比如

php artisan make:___Controller ____ 建立 控制器,这个应该挺常用的,

php artisan make:migration create_articles_table --create='articles'  创建migration文件, 相当于建立数据库的框架吧

php artisan migrate  把数据库框架,做成数据库 

php artisan make:model Article MVC 中的M , 姑且称 数据库模型吧 

数据库为articles,那么操作模型就 Article ,数据库有s , 模型没s ,这样模型就默认操作对应的数据库.

路由 和 控制器其实这部分,用的频率很高,不用怎么特地去记,自然会记住的.

敲代码要注意一点,windows不区分大小写,linux是区分大小写.

最终生产环境是部署在linux,所以在开发是要严格注意大小写.

4月8号 凌晨 历史遗留问题

之前师父问过我几次centos 7 有没弄懂 设置成固定ip.

在公司的环境下,几次启动虚拟机 都一个ip,我就没把那问题当回事.直接说懂了

后来在家里 发现家里的机器 每次启动 ip都不一样, 确实给我带来点问题,

还是要弄懂怎么配置固定的ip 比较好.

查了资料,逻辑其实还是和windows 设置固定 ip一样的,

vi /etc/sysconfig/network-sc___/ifcfg-ens__

编辑这个文件, 需要改动的

BOOTPROTO=static #默认是dhcp . 改成 static 静态.

添加:

IPADDR="192.168.0.100" #IP地址

PREFIX=16 #设置子网掩码。表示16位掩码，即 255.255.0.0 , 固定

GATEWAY="192.168.0.1"      #网关,和ip地址前面2段一样, 后面固定 .0.1

DNS1="180.168.255.118"   #DNS服务器 （这里是上海的DNS,要配置对应的地区
DNS2="180.168.255.18"

保存 退出, 重启 网络服务 ,以后就是固定 ip了.

还有一个就是 composer 问题, 依然不是很懂 它的运行 逻辑, 只能照猫画老虎的使用

好在可以用,慢慢 用到 慢慢多了解吧,

之前不懂用composer安装laravel的拓展包, 现在懂了.

cmd 进到 项目文件夹里,

执行 composer require laravelcollective/html=x.x.x

就可以把拓展包 安装上了.  其中x.x.x 是版本 

注意看说明, 要在什么地方 写上什么 , 才能正确用到拓展包


4月7号 composer的安装 以及用

之前一键下载 安装 laravel 很快 很简单 

但是不会用composer 

现在学composer安装laraverl

先把php的这3个拓展打开 在php.ini中

;extension=php_onpenssl.dll  
  
;extension=php_mbstring.dll  
  
;extension=php_pdo_mysql.dll  

去掉分号就是打开

将下载的composer.phar复制到PHP的安装目录下面，也就是和php.exe在同一级目录。

在 PHP 安装目录下新建一个composer.bat文件，并将下列代码保存到此文件中。
@php "%~dp0composer.phar" %*  
打开一个命令行窗口试一试执行composer --version看看是否正确输出版本号。

打开命令行窗口执行如下命令
composer config -g repo.packagist composer https://packagist.phpcomposer.com  

打开命令行窗口执行d:再执行 cd appserv\www进入网站目录 再执行如下代码创建一个名为ams的Laravel项目（项目名自定）
composer create-project laravel/laravel ams --prefer-dist  这样会下载最新的laravel

如果要下载指定版本,指定一下版本号就可以,像这样

composer create-project laravel/laravel=5.2.x ams --prefer-dist

以上内容从以下地址摘抄,实践一遍,好用,记录,毕竟搭建环境,比较久用一次,中间会忘记
http://blog.csdn.net/hpugym/article/details/54631739

4月6号 git 学习记录
git init 建立一个目录,然后在这个目的,执行这个 命令, 把这个文件夹 xx 设为仓库

git add  yyy.xxx  把yyy.xxx 添加到 暂存区. (yyy.xxx 必须在xx 文件夹)

git commit -m "备注"  把 暂存区 的文件提交到仓库 master ,

git status  查看当前仓库状态

git diff 文件有什么不同

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

ssh-keygen -t rsa -C "youremail@example.com"   创建ssh key, 在用户主目录下  有公key , 私key

应该要在远程 建立一个 对应的项目
git remote add origin git@github.com:________/learngit.git   origin 远程目录文件夹名称,______github账号

git push -u origin master   把master分支推送 到远程的 origin 仓库 第一次 要带 -u

git push origin master  把master分支推送 到远程的 origin 仓库,以后不用带-u了

git clone git@github.com:_______/--------.git   ____github账号,-----远程项目名字 ,远程仓库克隆到本地当前目录仓库

先把目录 进到 仓库 
git remote -v 查看远程仓库

git fetch origin master:temp  把远程仓库下 回来,新建一个temp分支,当前在哪个项目的目录 就下哪个项目回来

git diff temp  比较本地代码与temp 代码的区别

git merge temp  合并

git branch -d temp 删除temp分支


git checkout -b dev 创建分支,并且切换到那个分支

git branch dev  创建 dev分支

git checkout dev 切换到 dev分支

git branch命令查看当前分支



4.5
常用 命令
yum -y install wget
yum -y install perl perl-devel autoconf
yum install net-tools
yum install zip unzip
centos 7mini 要一键安装web环境, 先装这些
netstat -tunpl


blog   4.1
对于Linux 以及 搭建LMNP环境有一定概念了，就算是复制 百度来的那些命令执行，也知道自己在做什么了，而不是纯粹复制。
当然还是对很多东西不懂，稍微出一点状况就没自己的应付逻辑了。慢慢学习，遇到一点学一点，没办法急。

了解企业正规开发流程，需求分析，原型设计草图，模块开发、测试。
可以通过 回答下面这些问题 来做出 我们的流程

信息结构框图?

	我要做什么东西

	这个东西的每个页面有什么 元素 

用户流程图
	
用户通过怎样的操作流程实现这些功能.
(我是蹲在服务器里面, 我要怎么处理, 用户传进来的操作请求)

界面原型草图
	
这些功能 应该如何分配界面  让用户操作起来得心应手


模块开发/测试
	ER图 
	
   	各个实体之间的关系
	
	这些功能设涉及到什么东西供自己或别人下次访问.
	
	这些东西有什么属性以及这些东西怎样联系起来的
   



blog   3.31

很久以前第一次接触到 linux, 印象是没有界面, 就是命令. 
后来看到 多数是带有界面的, 我以为linux升级起来  也是带界面了.
今天自己装了个 minimal,第一次 跟着教程走,倒是不难,不用教程也会了,
开启一看,还是小黑窗, 感情linux还是没界面,以前看的界面只是第三方软件而已.

界面和黑窗,就是具体操作起来的方法不一样
界面就是鼠标点点点,黑窗就是键盘点点点,

但其实本质逻辑还是差不多的.打开某个文件夹cd 路径,打开了并不能直接看到里面的文件,
那就ll或者ls把文件列出来. 

编辑文本 window默认自带用 notepad.exe ..
在linux是用vi xxx,打开文件后,
按下 esc , 再按i 就可以编辑了
按下esc 再 :wq 就保存 退出   :q 退出

比如linux默认是不上网的.要改下配置文件.
那就cd /etc/sysconfig/network-scripts/ 到这个路径,
打开配置文件vi igcfg-ens33,

按一下 esc 命令模式,告诉我要对这个文本做什么了,
再按下 i , 下面就出说明了, 现在是 插入 模式, 我们就可以修改文件,
把最后的 onboot的no改成 yes ,再按一下 esc ,输入:wq. 回车.在最底部会显示.
告诉系统我要保存文件退出. 

安装软件的时候,用命令 会遇到有的命令不行, 可以理解为 系统没装那个软件,(系统有,但是没装),
百度对应装上来就好了.

逻辑上要做什么事,再结合百度,找一下 并不是想象的那么难,要知道自己要做什么,要找就ok.

默认防火墙是开启,就算nginx安装成功,也是访问不到这个安装成功的网站.得把防火墙关掉.具体如下

CentOS7 
1、关闭防火墙：sudo systemctl stop firewalld.service
2、关闭开机启动：sudo systemctl disable firewalld.service
 
3、安装iptables防火墙
执行以下命令安装iptables防火墙：sudo yum install iptables-services

4、配置iptables防火墙，打开指定端口（具体跟以前版本一样，网上介绍很多，这里不多介绍了）

5. 设置iptables防火墙开机启动：sudo systemctl enable iptables

目前关心1,2就好了,直接关掉,以后细节配置 再细节研究.
现在目标明确就是,能用.
